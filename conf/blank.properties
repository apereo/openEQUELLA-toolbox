### Toolbox function
#
# MigrateToKaltura, ExportItems, Email, FileLister, JsonReport, CheckFiles
toolbox.function=

oeq.url=
oeq.oauth.client.id=
oeq.oauth.client.secret=
oeq.search.api.requested.length=10
oeq.search.api=/api/search/?collections=csv-of-collection-uuids&order=name&reverse=false&info=all&showall=false&status=LIVE

# Use \\ for Windows, / for Mac and Linux
general.os.slash=/
general.download.folder=/my/temp/folder/for/openequella-migration-downloads

# Need to be an integer.
# Controls how often the script will give a file download update (higher is less frequent).
general.download.chatter=400

### Needed for MigrateToKaltura

migrate-to-kaltura.kal.partner.id=
migrate-to-kaltura.kal.admin.secret=
migrate-to-kaltura.kal.categories=
migrate-to-kaltura.oeq.kal.id=
migrate-to-kaltura.kal.user.id=
migrate-to-kaltura.kal.service.url=
migrate-to-kaltura.general.max.items.to.migrate=3
migrate-to-kaltura.oeq.search.attachment.description=My Videos
# Case insensitive CSV .audio and .video must be distinct sets.  Used to determine
# if the script uploads to Kaltura as an Audio or Video entry.
migrate-to-kaltura.oeq.search.attachment.suffixes.audio=.mp3
migrate-to-kaltura.oeq.search.attachment.suffixes.video=.mp4,.MOV
migrate-to-kaltura.oeq.search.kal.tags.xpath=/xml/my/path/to/tags/text()

### Needed for ExportItems
export.items.output=/my/export/file.csv

# Format:  YYYY-MM-DD
export.items.filter.dateCreated=2013-01-01

# CSV of metadata paths
# Keywords:  UUID, Version, attachment_names, name, description, kaltura_id
# The rest of the columns are assumed to be xpaths.  The script will automatically add prefix 'xml/' and add a suffix of '/text()'
export.items.columnFormat=my/metadata/title,UUID,Version,attachment_names,my/metadata/data1,my/metadata/data2,my/metadata/data3
export.items.attachment.path.template=/Attachments/@HASH/@UUID/@VERSION/@FILENAME

# Needed for email...
email.server=[[smtp server]]
email.username=[[smtp username]]
email.password=[[smtp password]]
email.sender.address=
email.sender.name=

# Needed for FileLister
# general.os.slash=

# Needed for JSON Report
# A directory of .json files
jsonreport.sources=
# The path to the properties to expose (assumes a JSON Array)
jsonreport.jsonpath=
# A CSV of properties to pull out of each object found in the jsonreport.jsonpath
jsonreport.keys=

# Needed for CheckFiles

## Required

# Can be `REST`, `DB_ALL_ITEMS_ALL_ATTS`, or `DB_BATCH_ITEMS_PER_ITEM_ATTS`
# `REST` uses the REST API / Web UI of openEQUELLA (currently not fixed/converted)
# `DB*` will query the DB, and check the filestore without using any openEQUELLA code.  No web UI calls.
# DB only works with PostgreSQL.
cf.mode=DB_ALL_ITEMS_ALL_ATTS

# This folder is an absolute path
cf.output.folder=/my/oeq-toolbox/reports/

# Freeform, though just characters that will play nice in a file name (no special characters or whitespace).
cf.adopter.name=

# Possible values:
# NONE - disable email
# NORMAL - sends on email on each run
# ONLY_NEW_MISSING_ATTACHMENTS_OR_ERRORS - sends on email when the missing attachments change or when there are errors
#
cf.email.mode=NONE
# CSV of emails, required if cf.email.mode != NONE
cf.email.recipients=

## Required if cf.mode = REST
# oeq.url=
# oeq.oauth.client.id=
# oeq.oauth.client.secret=

# Only for REST cf.mode reports.
cf.institution.shortname=

# Only used for cf.mode = REST
# Number of retries after receiving an exception (such as a connection timeout)
# before the CheckFiles utility will exit.
cf.max.tries=10

# Only used for cf.mode = REST
# For testing - number of tries to inject a 1 MS timeout limit before allowing
# the request to be normal.  '0' will effectively disable this test.  Only fully
# implemented for REST mode.
cf.testing.timeout=0

## Required if cf.mode = DB-*

cf.db.url=
cf.db.username=
cf.db.password=
cf.db.type=POSTGRE
#Specify an absolute path to the Institutions directory.
cf.filestore.directory=/my/filestore/dir/Institutions

# Required for DB-* modes and must be a number greater than 1.
cf.num.items.per.query=50

# Not required.  Only for DB-* cf.mode reports.  CheckFiles will not run if it can't resolve all institutions shortnames
# as filestore directories.  If an institution filestore handle was changed, the user needs to include the following line in the properties
# files for each different institution filestore:
cf.filestore.institution.handle.{originalInstitutionShortname}={newInstitutionShortname}

## Optional Filters

# Not required.  This is the UUID if cf.mode = REST, otherwise it's the DB ID of the collection.
# Note:  when running CheckFiles in a DB-* mode, the tool displays all the institutions and collections -
#  You can grab the needed ID from there.
cf.filter.by.collection=

# Not required.  This only applies to DB-* cf.mode reports.  This is the 'short_name of the institution (The 'Filestore' value in the server admin pages)'.
cf.filter.by.institution=

# Advanced filestore configuration.  Needs a line for each collection covered in the installation.
# Example:  for an institution with ID 23, institution shortname CfTesting, a collection with
# uuid 123456-7890-1234-567890, and adv filestore path /my/extra/data,  this line would look like:
# cf.filestore.adv.filestore.23.123456-7890-1234-567890=/my/extra/data/Institutions/CfTesting/Attachments/123456-7890-1234-567890
# Note:  Since this is a 'dynamic' property, it won't show up in the property list at runtime.
cf.filestore.advanced.{inst-id}.{collection-uuid}=

# Will compare the previous error report with the error report just ran.
# Recommended to use in conjuction with email for an automated regular cron job
# Values: true|false
# Default:  false
cf.compare.missing.atts.after.run=
